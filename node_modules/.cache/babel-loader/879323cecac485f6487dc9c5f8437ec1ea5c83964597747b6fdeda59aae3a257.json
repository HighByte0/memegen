{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\hamza\\\\Desktop\\\\lasttry\\\\last\\\\src\\\\components\\\\Memecop.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Mems() {\n  _s();\n  const [meme, setmeme] = React.useState({\n    topText: \"\",\n    bottomText: \"\",\n    randomimg: \"https://tse3.mm.bing.net/th?id=OIP.6VIGMTs6iRmLCAa044iSyQHaEK&pid=Api&P=0&h=180\"\n  });\n  useEffect(() => {\n    fetch(\"https://api.imgflip.com/get_memes\").then(res => res.json()) // Corrected this line\n    .then(data => setallmemeimg(data.data.memes));\n  }, []);\n  console.log(allmemimg);\n  const [allmemimg, setallmemeimg] = React.useState([]);\n  function getMeme() {\n    const memes = allmemimg.data.memes;\n    const rand = Math.floor(Math.random() * memes.length);\n    let randurlimg = memes[rand].url;\n    setmeme(prevmeme => {\n      return {\n        ...prevmeme,\n        randomimg: randurlimg\n      };\n    });\n  }\n  function handlchancge(event) {\n    const {\n      name,\n      value\n    } = event.target;\n    setmeme(prevmeme => ({\n      ...prevmeme,\n      [name]: value\n    }));\n  }\n  return /*#__PURE__*/_jsxDEV(\"main\", {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"form\",\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        children: /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          placeholder: \"top text\",\n          className: \"form--input\",\n          name: \"topText\",\n          value: meme.topText,\n          onChange: handlchancge\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        children: /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          placeholder: \"bottom text\",\n          className: \"form--input\",\n          name: \"bottomText\",\n          value: meme.bottomText,\n          onChange: handlchancge\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"form--button\",\n        onClick: getMeme,\n        children: \"GET A NEW MEME IMAGE\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"meme\",\n      children: [/*#__PURE__*/_jsxDEV(\"img\", {\n        src: meme.randomimg,\n        className: \"meme--img\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n        className: \"meme--text top \",\n        children: [\" \", meme.topText, \" \"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n        className: \"meme--text bottom \",\n        children: [\"  \", meme.bottomText]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 7\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 52,\n    columnNumber: 5\n  }, this);\n}\n_s(Mems, \"8Q8mJ7XMzcHxGocxAvssX3YDtDA=\");\n_c = Mems;\nvar _c;\n$RefreshReg$(_c, \"Mems\");","map":{"version":3,"names":["React","useEffect","useState","jsxDEV","_jsxDEV","Mems","_s","meme","setmeme","topText","bottomText","randomimg","fetch","then","res","json","data","setallmemeimg","memes","console","log","allmemimg","getMeme","rand","Math","floor","random","length","randurlimg","url","prevmeme","handlchancge","event","name","value","target","children","className","type","placeholder","onChange","fileName","_jsxFileName","lineNumber","columnNumber","onClick","src","_c","$RefreshReg$"],"sources":["C:/Users/hamza/Desktop/lasttry/last/src/components/Memecop.js"],"sourcesContent":["import React, {  useEffect, useState } from \"react\";\r\n\r\nexport default function Mems() {\r\n  const [meme,setmeme]=React.useState(\r\n    {\r\n      topText:\"\",\r\n      bottomText:\"\",\r\n      randomimg:\"https://tse3.mm.bing.net/th?id=OIP.6VIGMTs6iRmLCAa044iSyQHaEK&pid=Api&P=0&h=180\"\r\n\r\n    }\r\n  )\r\n\r\n  useEffect(() => {\r\n    fetch(\"https://api.imgflip.com/get_memes\")\r\n      .then(res => res.json()) // Corrected this line\r\n      .then(data => setallmemeimg(data.data.memes))\r\n  }, [])\r\n\r\n  console.log(allmemimg)\r\n  \r\n  const [allmemimg,setallmemeimg]=React.useState([])\r\n\r\n  function getMeme() {\r\n    const memes =allmemimg.data.memes;\r\n    const rand = Math.floor(Math.random() * memes.length);\r\n    let randurlimg= memes[rand].url\r\n    setmeme(\r\n      prevmeme=>{\r\n        return{\r\n          ...prevmeme,\r\n          randomimg:randurlimg\r\n        }\r\n      }\r\n      \r\n     );\r\n  }\r\n  function handlchancge(event){\r\n    const {name,value}=event.target\r\n    setmeme(\r\n      (prevmeme)=>({\r\n        ...prevmeme,\r\n        [name]:value\r\n\r\n        \r\n      })\r\n    )\r\n  }\r\n\r\n\r\n\r\n  return (\r\n    <main>\r\n      <div className=\"form\">\r\n        <label>\r\n          <input type=\"text\" placeholder=\"top text\" className=\"form--input\" name=\"topText\"  value={meme.topText} onChange={handlchancge}  />\r\n        </label>\r\n \r\n        <label>\r\n          <input type=\"text\" placeholder=\"bottom text\" className=\"form--input\"name=\"bottomText\" value={meme.bottomText}  onChange={handlchancge} />\r\n        </label>\r\n\r\n        <button className=\"form--button\" onClick={getMeme}>\r\n          GET A NEW MEME IMAGE\r\n        </button>\r\n      </div>\r\n\r\n      <div className=\"meme\">\r\n      <img src={meme.randomimg} className=\"meme--img\" />\r\n      <h2 className=\"meme--text top \" > {meme.topText} </h2>\r\n      <h2 className=\"meme--text bottom \" >  {meme.bottomText}</h2>\r\n\r\n      </div>\r\n   \r\n    </main>\r\n  );\r\n}\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}