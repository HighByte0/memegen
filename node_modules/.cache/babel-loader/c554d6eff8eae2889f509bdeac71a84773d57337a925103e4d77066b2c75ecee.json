{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\hamza\\\\Desktop\\\\lasttry\\\\last\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport './App.css';\nimport React from 'react';\nimport datas from './components/memsdata';\nimport Travel from './components/Meme';\nimport Meme from './components/Meme';\nimport Eve from './components/Evente';\nimport Memeimp from './components/Memecop';\nimport Counter from './components/Counter';\nimport Ternary from './components/ternary';\nimport Carte from './components/cartevis';\nimport Body from './components/Body';\nimport Header from './components/header';\nimport Boxes from './components/Boxes';\nimport Boxe from './components/Boxe.js';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App(props) {\n  _s();\n  const [user, setUser] = React.useState(\"joe\");\n  const [squares, setSquares] = React.useState(Boxes);\n  function toggle(id) {\n    setSquares(prevsquare => {\n      const newsquare = [];\n      for (let i = 0; i < prevsquare.length; i++) {\n        const currentsquare = prevsquares[i];\n        if (currentsquare === id) {\n          const udpdatsquare = {\n            ...currentsquare\n          };\n        }\n      }\n    });\n  }\n  const boxElements = squares.map(square => /*#__PURE__*/_jsxDEV(Boxe, {\n    on: square.on,\n    toggle: toggle,\n    id: square.id\n  }, square.id, false, {\n    fileName: _jsxFileName,\n    lineNumber: 44,\n    columnNumber: 4\n  }, this));\n\n  //    < Ternary/> <Meme/>  <Carte/>\n  //  <Memeimp/>\n\n  // Eve\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: boxElements\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 61,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"eO2Z+wr0MvDWCWCrPwxzQTJMlQs=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","datas","Travel","Meme","Eve","Memeimp","Counter","Ternary","Carte","Body","Header","Boxes","Boxe","jsxDEV","_jsxDEV","App","props","_s","user","setUser","useState","squares","setSquares","toggle","id","prevsquare","newsquare","i","length","currentsquare","prevsquares","udpdatsquare","boxElements","map","square","on","fileName","_jsxFileName","lineNumber","columnNumber","children","_c","$RefreshReg$"],"sources":["C:/Users/hamza/Desktop/lasttry/last/src/App.js"],"sourcesContent":["import './App.css';\nimport React from 'react';\nimport datas  from './components/memsdata';\n\nimport Travel from './components/Meme';\nimport Meme from './components/Meme'\nimport Eve from './components/Evente';\n\nimport Memeimp from './components/Memecop';\nimport Counter from './components/Counter';\nimport Ternary from './components/ternary';\nimport Carte from './components/cartevis';\nimport Body from './components/Body';\nimport Header from './components/header';\nimport Boxes from './components/Boxes';\nimport Boxe from './components/Boxe.js';\n\nfunction App(props) {\n  const [user, setUser] = React.useState(\"joe\");\n  const [squares, setSquares] = React.useState(Boxes); \n  function toggle(id){\n    setSquares(\n      prevsquare=>{\n        const newsquare=[]\n        for (let i= 0 ;i<prevsquare.length;i++){\n          const currentsquare=prevsquares[i]\n          if(currentsquare===id){\n            const udpdatsquare={\n              ...currentsquare\n            }\n\n          }\n        }\n        \n      }\n    )\n   \n\n\n  }\n\n\n  const boxElements = squares.map(square => (\n   <Boxe key={square.id}\n    on={square.on}\n    toggle={toggle} \n    id={square.id}\n      />\n  ));\n \n\n  \n\n\n//    < Ternary/> <Meme/>  <Carte/>\n //  <Memeimp/>\n\n// Eve\n  return (\n\n    <div>\n       {boxElements}\n     \n\n       \n   \n     \n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":";;AAAA,OAAO,WAAW;AAClB,OAAOA,KAAK,MAAM,OAAO;AACzB,OAAOC,KAAK,MAAO,uBAAuB;AAE1C,OAAOC,MAAM,MAAM,mBAAmB;AACtC,OAAOC,IAAI,MAAM,mBAAmB;AACpC,OAAOC,GAAG,MAAM,qBAAqB;AAErC,OAAOC,OAAO,MAAM,sBAAsB;AAC1C,OAAOC,OAAO,MAAM,sBAAsB;AAC1C,OAAOC,OAAO,MAAM,sBAAsB;AAC1C,OAAOC,KAAK,MAAM,uBAAuB;AACzC,OAAOC,IAAI,MAAM,mBAAmB;AACpC,OAAOC,MAAM,MAAM,qBAAqB;AACxC,OAAOC,KAAK,MAAM,oBAAoB;AACtC,OAAOC,IAAI,MAAM,sBAAsB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAExC,SAASC,GAAGA,CAACC,KAAK,EAAE;EAAAC,EAAA;EAClB,MAAM,CAACC,IAAI,EAAEC,OAAO,CAAC,GAAGnB,KAAK,CAACoB,QAAQ,CAAC,KAAK,CAAC;EAC7C,MAAM,CAACC,OAAO,EAAEC,UAAU,CAAC,GAAGtB,KAAK,CAACoB,QAAQ,CAACT,KAAK,CAAC;EACnD,SAASY,MAAMA,CAACC,EAAE,EAAC;IACjBF,UAAU,CACRG,UAAU,IAAE;MACV,MAAMC,SAAS,GAAC,EAAE;MAClB,KAAK,IAAIC,CAAC,GAAE,CAAC,EAAEA,CAAC,GAACF,UAAU,CAACG,MAAM,EAACD,CAAC,EAAE,EAAC;QACrC,MAAME,aAAa,GAACC,WAAW,CAACH,CAAC,CAAC;QAClC,IAAGE,aAAa,KAAGL,EAAE,EAAC;UACpB,MAAMO,YAAY,GAAC;YACjB,GAAGF;UACL,CAAC;QAEH;MACF;IAEF,CACF,CAAC;EAIH;EAGA,MAAMG,WAAW,GAAGX,OAAO,CAACY,GAAG,CAACC,MAAM,iBACrCpB,OAAA,CAACF,IAAI;IACJuB,EAAE,EAAED,MAAM,CAACC,EAAG;IACdZ,MAAM,EAAEA,MAAO;IACfC,EAAE,EAAEU,MAAM,CAACV;EAAG,GAHJU,MAAM,CAACV,EAAE;IAAAY,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAIhB,CACJ,CAAC;;EAMJ;EACC;;EAED;EACE,oBAEEzB,OAAA;IAAA0B,QAAA,EACIR;EAAW;IAAAI,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAMV,CAAC;AAEV;AAACtB,EAAA,CApDQF,GAAG;AAAA0B,EAAA,GAAH1B,GAAG;AAsDZ,eAAeA,GAAG;AAAC,IAAA0B,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}