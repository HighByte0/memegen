{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\hamza\\\\Desktop\\\\lasttry\\\\last\\\\src\\\\api.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Api() {\n  _s();\n  const [data, setData] = useState(null);\n  useEffect(() => {\n    // Use an asynchronous function inside useEffect\n    const fetchData = async () => {\n      try {\n        const response = await fetch(\"https://swapi.dev/api/people/\");\n        const jsonData = await response.json();\n        setData(jsonData);\n      } catch (error) {\n        console.error(\"Error fetching data:\", error);\n      }\n    };\n    fetchData(); // Call the asynchronous function\n  }, []); // Empty dependency array to run the effect only once\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(\"pre\", {\n      children: JSON.stringify(data, null, 2)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 22,\n    columnNumber: 5\n  }, this);\n}\n_s(Api, \"fQZRxy/+nAZ7NLS1X4dVhrlp8Go=\");\n_c = Api;\nvar _c;\n$RefreshReg$(_c, \"Api\");","map":{"version":3,"names":["React","useState","useEffect","jsxDEV","_jsxDEV","Api","_s","data","setData","fetchData","response","fetch","jsonData","json","error","console","children","JSON","stringify","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/hamza/Desktop/lasttry/last/src/api.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\r\n\r\nexport default function Api() {\r\n  const [data, setData] = useState(null);\r\n\r\n  useEffect(() => {\r\n    // Use an asynchronous function inside useEffect\r\n    const fetchData = async () => {\r\n      try {\r\n        const response = await fetch(\"https://swapi.dev/api/people/\");\r\n        const jsonData = await response.json();\r\n        setData(jsonData);\r\n      } catch (error) {\r\n        console.error(\"Error fetching data:\", error);\r\n      }\r\n    };\r\n\r\n    fetchData(); // Call the asynchronous function\r\n  }, []); // Empty dependency array to run the effect only once\r\n\r\n  return (\r\n    <div>\r\n      <pre>{JSON.stringify(data, null, 2)}</pre>\r\n    </div>\r\n  );\r\n}\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEnD,eAAe,SAASC,GAAGA,CAAA,EAAG;EAAAC,EAAA;EAC5B,MAAM,CAACC,IAAI,EAAEC,OAAO,CAAC,GAAGP,QAAQ,CAAC,IAAI,CAAC;EAEtCC,SAAS,CAAC,MAAM;IACd;IACA,MAAMO,SAAS,GAAG,MAAAA,CAAA,KAAY;MAC5B,IAAI;QACF,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAC,+BAA+B,CAAC;QAC7D,MAAMC,QAAQ,GAAG,MAAMF,QAAQ,CAACG,IAAI,CAAC,CAAC;QACtCL,OAAO,CAACI,QAAQ,CAAC;MACnB,CAAC,CAAC,OAAOE,KAAK,EAAE;QACdC,OAAO,CAACD,KAAK,CAAC,sBAAsB,EAAEA,KAAK,CAAC;MAC9C;IACF,CAAC;IAEDL,SAAS,CAAC,CAAC,CAAC,CAAC;EACf,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC;;EAER,oBACEL,OAAA;IAAAY,QAAA,eACEZ,OAAA;MAAAY,QAAA,EAAMC,IAAI,CAACC,SAAS,CAACX,IAAI,EAAE,IAAI,EAAE,CAAC;IAAC;MAAAY,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAM;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACvC,CAAC;AAEV;AAAChB,EAAA,CAvBuBD,GAAG;AAAAkB,EAAA,GAAHlB,GAAG;AAAA,IAAAkB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}